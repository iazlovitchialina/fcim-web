@model IEnumerable<UTM.Keto.Domain.Product>

@{
    ViewBag.Title = "Shop";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <h2 class="mb-4">Product Catalog</h2>
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
        </div>
    }
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
        </div>
    }
    
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="card-img-top-container" style="height: 200px; background-color: #f7f7f7; display: flex; align-items: center; justify-content: center;">
                        @if (!string.IsNullOrEmpty(product.ImagePath))
                        {
                            <img src="@product.ImagePath" alt="@product.Name" class="card-img-top" style="max-height: 100%; max-width: 100%; object-fit: contain;">
                        }
                        else
                        {
                            <div class="text-center p-4">
                                <i class="fas fa-image fa-4x text-muted"></i>
                                <p class="mt-2">No image available</p>
                            </div>
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text text-truncate" title="@product.Description">@product.Description</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="price-tag">$@product.Price.ToString("F2")</span>
                            @if (product.InStock)
                            {
                                <span class="badge bg-success">In Stock</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Out of Stock</span>
                            }
                        </div>
                    </div>
                    <div class="card-footer bg-white border-top-0">
                        <div class="d-grid gap-2">
                            <a href="@Url.Action("Details", new { id = product.Id })" class="btn btn-primary">
                                <i class="fas fa-info-circle me-2"></i> View Details
                            </a>
                            @if (product.InStock)
                            {
                                using (Html.BeginForm("AddToCart", "Shop", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <input type="hidden" name="quantity" value="1" />
                                    <button type="submit" class="btn btn-success w-100 mt-2">
                                        <i class="fas fa-cart-plus me-2"></i> Add to Cart
                                    </button>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <p>No products are available at this time.</p>
        </div>
    }
</div> 
@model List<UTM.Keto.Web.Models.UserActivityViewModel>
@{
    ViewBag.Title = "Отчет по пользователям";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    // Вычисляю данные для графиков заранее
    var top10Users = Model.OrderByDescending(u => u.TotalSpent).Take(10).ToList();
    
    // Вычисляю итоговые значения для таблицы заранее
    var totalOrderCount = Model.Sum(x => x.OrderCount);
    var totalSpent = Model.Sum(x => x.TotalSpent);
    var averageCheck = totalOrderCount > 0 ? totalSpent / totalOrderCount : 0;
}

<div class="container-fluid my-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-gradient-success text-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0 fw-bold"><i class="fas fa-users me-2"></i>Отчет по пользователям</h3>
                        <div>
                            <a href="@Url.Action("Index", "Admin")" class="btn btn-light btn-sm">
                                <i class="fas fa-arrow-left me-1"></i> Назад к панели управления
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Фильтры и статистика -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <form action="@Url.Action("UsersReport", "Admin")" method="get" class="mb-4">
                        <div class="row">
                            <div class="col-md-4 mb-2">
                                <label for="startDate" class="form-label">Дата начала</label>
                                <input type="date" class="form-control" id="startDate" name="startDate" value="@ViewBag.StartDate">
                            </div>
                            <div class="col-md-4 mb-2">
                                <label for="endDate" class="form-label">Дата окончания</label>
                                <input type="date" class="form-control" id="endDate" name="endDate" value="@ViewBag.EndDate">
                            </div>
                            <div class="col-md-4 d-flex align-items-end mb-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-filter me-1"></i> Применить фильтр
                                </button>
                                <a href="@Url.Action("UsersReport", "Admin")" class="btn btn-outline-secondary ms-2">
                                    <i class="fas fa-redo me-1"></i> Сбросить
                                </a>
                                <button type="button" class="btn btn-success ms-2" onclick="exportTableToExcel('usersTable', 'users_report')">
                                    <i class="fas fa-file-excel me-1"></i> Excel
                                </button>
                            </div>
                        </div>
                    </form>

                    <div class="report-summary">
                        <div class="summary-item">
                            <div class="label">Период</div>
                            <div class="value">@DateTime.Parse(ViewBag.StartDate).ToString("dd.MM.yyyy") - @DateTime.Parse(ViewBag.EndDate).ToString("dd.MM.yyyy")</div>
                        </div>
                        <div class="summary-item">
                            <div class="label">Активных пользователей</div>
                            <div class="value text-success">@ViewBag.TotalActiveUsers</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Графики -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Топ-10 активных пользователей</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="usersChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Распределение заказов</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie mb-4">
                        <canvas id="orderDistributionChart"></canvas>
                    </div>
                    <div class="mt-3">
                        <div class="row">
                            <div class="col-6">
                                <div class="d-flex align-items-center">
                                    <div style="width: 20px; height: 20px; background-color: rgba(28, 200, 138, 0.8); border-radius: 4px;"></div>
                                    <div class="ms-2">1 заказ</div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="d-flex align-items-center">
                                    <div style="width: 20px; height: 20px; background-color: rgba(54, 185, 204, 0.8); border-radius: 4px;"></div>
                                    <div class="ms-2">2-5 заказов</div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-6">
                                <div class="d-flex align-items-center">
                                    <div style="width: 20px; height: 20px; background-color: rgba(246, 194, 62, 0.8); border-radius: 4px;"></div>
                                    <div class="ms-2">6-10 заказов</div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="d-flex align-items-center">
                                    <div style="width: 20px; height: 20px; background-color: rgba(78, 115, 223, 0.8); border-radius: 4px;"></div>
                                    <div class="ms-2">11+ заказов</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Таблица с данными -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Детализация по пользователям</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="usersTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Пользователь</th>
                                    <th>Email</th>
                                    <th class="text-center">Количество заказов</th>
                                    <th class="text-end">Общая сумма</th>
                                    <th class="text-end">Средний чек</th>
                                    <th>Последний заказ</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count > 0)
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.UserName</td>
                                            <td>@item.Email</td>
                                            <td class="text-center">@item.OrderCount</td>
                                            <td class="text-end">@item.TotalSpent.ToString("C")</td>
                                            <td class="text-end">@((item.TotalSpent / item.OrderCount).ToString("C"))</td>
                                            <td>@item.LastOrderDate.ToString("dd.MM.yyyy HH:mm")</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">Нет данных за выбранный период</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light fw-bold">
                                <tr>
                                    <td colspan="2">Итого:</td>
                                    <td class="text-center">@totalOrderCount</td>
                                    <td class="text-end">@totalSpent.ToString("C")</td>
                                    <td class="text-end">
                                        @(totalOrderCount > 0 
                                            ? averageCheck.ToString("C") 
                                            : "0,00 ₽")
                                    </td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script>
        // Данные для графиков
        const userData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(top10Users));
        
        // Расчет распределения заказов
        let oneOrder = 0;
        let twoToFiveOrders = 0;
        let sixToTenOrders = 0;
        let moreThanTenOrders = 0;
        
        @foreach (var user in Model)
        {
            <text>
            const orderCount_@user.UserId.ToString().Replace("-", "_") = @user.OrderCount;
            if (orderCount_@user.UserId.ToString().Replace("-", "_") === 1) {
                oneOrder++;
            } else if (orderCount_@user.UserId.ToString().Replace("-", "_") >= 2 && orderCount_@user.UserId.ToString().Replace("-", "_") <= 5) {
                twoToFiveOrders++;
            } else if (orderCount_@user.UserId.ToString().Replace("-", "_") >= 6 && orderCount_@user.UserId.ToString().Replace("-", "_") <= 10) {
                sixToTenOrders++;
            } else {
                moreThanTenOrders++;
            }
            </text>
        }
        
        // Цвета для графиков
        const chartColors = [
            'rgba(78, 115, 223, 0.8)',
            'rgba(28, 200, 138, 0.8)',
            'rgba(54, 185, 204, 0.8)',
            'rgba(246, 194, 62, 0.8)',
            'rgba(231, 74, 59, 0.8)',
            'rgba(116, 88, 171, 0.8)',
            'rgba(255, 141, 114, 0.8)',
            'rgba(109, 215, 176, 0.8)',
            'rgba(255, 183, 77, 0.8)',
            'rgba(144, 202, 249, 0.8)'
        ];
        
        // Инициализация графика активных пользователей (горизонтальный бар)
        const usersCtx = document.getElementById('usersChart').getContext('2d');
        const usersChart = new Chart(usersCtx, {
            type: 'bar',
            data: {
                labels: userData.map(item => item.UserName),
                datasets: [
                    {
                        label: 'Общая сумма покупок (₽)',
                        backgroundColor: chartColors,
                        borderColor: chartColors.map(color => color.replace('0.8', '1')),
                        borderWidth: 1,
                        data: userData.map(item => item.TotalSpent)
                    }
                ]
            },
            options: {
                maintainAspectRatio: false,
                indexAxis: 'y',
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    x: {
                        grid: {
                            display: true,
                            drawBorder: false
                        },
                        ticks: {
                            beginAtZero: true,
                            callback: function(value) {
                                return value.toLocaleString('ru-RU') + ' ₽';
                            }
                        }
                    },
                    y: {
                        grid: {
                            display: false,
                            drawBorder: false
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyColor: "#858796",
                        titleMarginBottom: 10,
                        titleColor: '#6e707e',
                        titleFontSize: 14,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        caretPadding: 10,
                        callbacks: {
                            label: function(context) {
                                const value = context.parsed.x;
                                return 'Сумма: ' + value.toLocaleString('ru-RU') + ' ₽';
                            },
                            afterLabel: function(context) {
                                const index = context.dataIndex;
                                return 'Заказов: ' + userData[index].OrderCount;
                            }
                        }
                    }
                }
            }
        });
        
        // Инициализация графика распределения заказов (пирог)
        const orderDistCtx = document.getElementById('orderDistributionChart').getContext('2d');
        const orderDistChart = new Chart(orderDistCtx, {
            type: 'pie',
            data: {
                labels: ['1 заказ', '2-5 заказов', '6-10 заказов', '11+ заказов'],
                datasets: [{
                    data: [oneOrder, twoToFiveOrders, sixToTenOrders, moreThanTenOrders],
                    backgroundColor: [
                        'rgba(28, 200, 138, 0.8)',
                        'rgba(54, 185, 204, 0.8)',
                        'rgba(246, 194, 62, 0.8)',
                        'rgba(78, 115, 223, 0.8)'
                    ],
                    hoverBackgroundColor: [
                        'rgba(28, 200, 138, 1)',
                        'rgba(54, 185, 204, 1)',
                        'rgba(246, 194, 62, 1)',
                        'rgba(78, 115, 223, 1)'
                    ],
                    hoverBorderColor: "rgba(234, 236, 244, 1)",
                }]
            },
            options: {
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.parsed;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return label + ': ' + value + ' пользователей (' + percentage + '%)';
                            }
                        }
                    }
                },
                cutout: '60%'
            }
        });
        
        // Функция экспорта таблицы в Excel
        function exportTableToExcel(tableID, filename = '') {
            const downloadLink = document.createElement("a");
            const dataType = 'application/vnd.ms-excel';
            const table = document.getElementById(tableID);
            const tableHTML = table.outerHTML.replace(/ /g, '%20');
            
            filename = filename ? filename + '.xls' : 'excel_data.xls';
            
            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
            downloadLink.download = filename;
            downloadLink.click();
        }
    </script>
} 